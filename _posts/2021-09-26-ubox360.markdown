---
layout: post
title:  "√âmulation d'une manette Xbox 360 en espace utilisateur"
author: Albin Kauffmann
---

<div markdown="1">

* TOC
{:toc}

</div>{: .float-right }

Voici enfin la suite et fin de ma s√©rie d'articles visant √† utiliser une vielle manette √† la place d'une manette de Xbox 360 (sous un PC Linux).

Vraiment d√©sol√© pour le d√©lai de publication de cet article : il √©tait pourtant presque pr√™t mais je n'avais pas pris le temps de le publier üòï.

Pour rappel, il m'a fallu envisager 3 techniques pour parvenir √† mes fins :
1. L'utilisation de `controllermap` pour un jeu SDL ([voir l'article](../../../2020/07/05/sdl-controllermap.html))
1. Le mapping des touches avec `systemd-udev` ([voir l'article](../../../2020/07/22/systemd-udev.html))
1. L'√©mulation d'une manette en espace utilisateur avec `ubox360` ([article ci-dessous](#pr√©sentation))

## Pr√©sentation

Avec la solution pr√©c√©dente, il est impossible de "mapper" des boutons sur les "triggers" de la manette Xbox 360.
En effet, je souhaite faire correspondre les 2 boutons pr√©sents sous la manette aux axes des triggers de la manette Xbox.

Ma solution a √©t√© de d√©velopper un programme:
1. lisant les √©v√©nements de ma manette (input device `/dev/input/event11`)
1. faisant la conversion via un fichier de mapping au format SDL (fichier fourni par `controllermap`)
1. √©crivant les √©v√©nements dans un nouveau "input device" virtuel (utilisation du driver Linux `uinput`)

J'ai nomm√© ce programme `ubox360` (le "u" indiquant l'√©mulation utilisateur).

## Installation de "ubox360"

`ubox360` est un script python.
Le plus simple est de l'installer via pip:

```bash
pip install ubox360
```

Avant d'ex√©cuter `ubox360`, il est tout d'abord n√©cessaire de charger le driver `uinput`:

```bash
modprobe uinput
```

... mais il faut √©galement effectuer une configuration des permissions.
En effet:
- `ubox360` doit pouvoir acc√©der √† `/dev/uinput`
- `ubox360` doit pouvoir cr√©er un nouveau p√©riph√©rique dans `/dev/input`
- `ubox360` doit acc√©der √† `/dev/input/event11` (input device de la manette) mais le jeux ne devrait pas y avoir acc√®s afin d'√©viter de lire les √©v√©nements 2 fois (√©v√©nements de la vraie manette + √©v√©nements de la manette √©mul√©e)

Afin d'avoir une configuration p√©renne, je propose de configurer votre machine comme dans la section suivante.

## Configuration de "ubox360"

Avec votre √©diteur texte favoris, taper les commandes suivantes :

```bash
# Ajouter un nouveau groupe pour /dev/uinput
sudo groupadd --system uinput

# Affecter ce groupe √† /dev/uinput
sudo VOTRE_EDITEUR_FAVORIS /etc/udev/rules.d/99-uinput.rules
# Une fois dans l'√©diteur, copier/coller cette ligne (sans le commentaire):
# SUBSYSTEM=="misc", KERNEL=="uinput", GROUP="uinput", MODE="0660"

# Mettre √† jour les permissions de uinput
sudo udevadm trigger /dev/uinput

# √âviter que votre utilisateur puisse lire les √©v√©nements de la manette
sudo VOTRE_EDITEUR_FAVORIS /etc/udev/rules.d/70.1-uaccess.rules
# Une fois dans l'√©diteur, copier/coller cette ligne (sans le commentaire):
# SUBSYSTEM=="input", ENV{ID_INPUT_JOYSTICK}=="?*", ATTRS{idVendor}=="0458", ATTRS{idProduct}=="100a", TAG-="uaccess"
```

Rebrancher la manette.

## Lancer "ubox360"

Ici nous utilisons `runuser` afin de lancer le programme `ubox360` avec les bons groupes :

```bash
sudo runuser --user=$USER --group=$USER --supp-group=input --supp-group=uinput -- ubox360 --controllerdb /PATH/TO/gamecontrollerdb.txt
```

Cette derni√®re commande devrait afficher quelque chose comme :
```
Info: Adding a new gamepad mapping:
  ,-- device /dev/input/event11, name "HID 0458:100a", phys "usb-0000:00:14.0-9/input0"
  '-> device /dev/input/event21, name "ubox360", phys "py-evdev-uinput"
```

Le p√©riph√©rique d'entr√©es `/dev/input/event21` a donc √©t√© cr√©√© et va retourner (apr√®s application du mapping) les entr√©es lues sur `/dev/input/event11`.

Vous pouvez v√©rifier les permissions:
- `/dev/input/event11` est lisible par le groupe `uinput` seulement, et donc pas par n'importe quel utilisateur
- `/dev/input/event21` est lisible par le groupe `input`, et donc par n'importe quel utilisateur classique et donc par votre jeux

√Ä vous de jouer !

## Ressources (en anglais)

- Projet ubox360 : <https://gitlab.com/albinou/python-ubox360>
